-
  const cachebust = +new Date()
  let title = 'LINE 數位版名片'
  let description = '請點此建立 LINE 數位版名片，如果沒有想要的樣式，歡迎一起貢獻名片樣板。'
doctype html
block beforehtml
html
  head
    meta(charset="UTF-8")
    meta(http-equiv="X-UA-Compatible", content="IE=edge")
    meta(name="viewport", content="width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, viewport-fit=cover, user-scalable=no")
    title= title
    meta(name="description", content=description)
    meta(property="og:description", content=description)
    meta(property="og:title", content=title)
    meta(property="og:type", content="website")
    block meta
    link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/bootstrap@4/dist/css/bootstrap.min.css")
    link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/font-awesome@4/css/font-awesome.min.css")
    link(rel="stylesheet", href="https://fonts.googleapis.com/css2?family=Noto+Sans+TC:wght@400;700&display=swap")
    style
      :sass
        [v-cloak]
          display: none
        body, .h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6
          font-family: 'Noto Sans TC', sans-serif
        input, textarea
          font-family: SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace!important
    block style
  body
    include /component/livereload
    block compoment-gtag
      include /component/gtag
    include /component/navbar
    #app.container.my-4(v-cloak)
      h2.my-3.text-center= title
      block form
      .row
        .col: button.btn.btn-danger.btn-block.my-2(type="button", @click="btnReset") #[i.fa.mr-2.fa-repeat] 重設表單
        .col: a.btn.btn-primary.btn-block.my-2(:href="shortcut", target="_blank") #[i.fa.mr-2.fa-id-card-o] 建立名片
    script(src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js")
    script(src="https://cdn.jsdelivr.net/npm/crypto-js@3/crypto-js.min.js")
    script(src="https://cdn.jsdelivr.net/npm/dayjs@1/dayjs.min.js")
    script(src="https://cdn.jsdelivr.net/npm/jquery@3/dist/jquery.min.js")
    script(src="https://cdn.jsdelivr.net/npm/js-base64@3/base64.min.js")
    script(src="https://cdn.jsdelivr.net/npm/json5@2/dist/index.min.js")
    script(src="https://cdn.jsdelivr.net/npm/lodash@4/lodash.min.js")
    script(src="https://cdn.jsdelivr.net/npm/papaparse@5/papaparse.min.js")
    script(src="https://cdn.jsdelivr.net/npm/popper.js@1/dist/umd/popper.min.js")
    script(src="https://cdn.jsdelivr.net/npm/qs@6/dist/qs.min.js")
    script(src="https://cdn.jsdelivr.net/npm/sweetalert2@10")
    script(src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.min.js")
    //- bootstrap require jquery and pupper
    script(src="https://cdn.jsdelivr.net/npm/bootstrap@4/dist/js/bootstrap.min.js")
    script(src=`${baseurl}js/common.js?cachebust=${cachebust}`)
    script.
      /* global httpBuildQuery, encodeBase64url */
      window.vueConfig = {
        el: '#app',
        data: {},
        async mounted () {
          window.gtagInit()
          window.gtagScreenView('瀏覽製作「#{title}」名片網頁')
          window.backupVcard = JSON5.stringify(_.get(this, 'vcard', {}))
          this.loadVcard()
          this.watchVcard()
          window.gtagTiming('after mounted')
        },
        computed: {
          shortcut () {
            const params = httpBuildQuery(_.mapValues(this.vcard, encodeBase64url))
            if (!_.isString(params) || !params.length) return
            return `https://liff.line.me/#{liffidFull}/share.html?${params}`
          },
        },
        methods: {
          loadVcard () {
            try {
              const saved = JSON5.parse(localStorage.getItem(location.pathname))
              _.each(saved, (v, k) => {
                if (_.isNil(v) || !_.hasIn(this.vcard, k)) return
                _.set(this.vcard, k, v)
              })
            } catch (err) {}
            window.gtagTiming('after loadVcard')
          },
          watchVcard () {
            this.$watch('vcard', (newVal, oldVal) => {
              localStorage.setItem(location.pathname, JSON5.stringify(newVal))
            }, { deep: true })
            window.gtagTiming('after watchVcard')
          },
          async btnReset () {
            try {
              window.gtagEvent('瀏覽製作「#{title}」名片網頁', 'btnReset', this.vcard.template)
              const result = await Swal.fire({
                cancelButtonText: '取消',
                confirmButtonText: '重設',
                icon: 'question',
                reverseButtons: true,
                showCancelButton: true,
                text: '請問你是否要把表單內的資料重設為預設資料？',
                title: '重設為預設資料',
              })
              if (!result.isConfirmed) return

              this.$set(this, 'vcard', JSON5.parse(window.backupVcard))
            } catch (err) {
              window.gtagError(err, true)
              console.error(err)
            }
          },
        },
      }
    //- 給予修改 vueConfig 的機會
    block vue-config
    script.
      (async () => {
        if (_.isFunction(window.beforeVueCreate)) await window.beforeVueCreate()
        window.vm = new Vue(window.vueConfig)
      })()
